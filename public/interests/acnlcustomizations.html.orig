<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>comfort's â™¡ bedroom !</title>
    <link rel="icon" type="image/x-icon" href="https://64.media.tumblr.com/tumblr_lkl5ovrP1S1qfamg6.gif">
    <link rel="stylesheet" href="../interests.css">
    <script src="/heaven/load.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="//pull.cappuccicons.com/cpf.js"></script> 
</head>

<style>
#item-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding: 0;
    margin: 0 auto;
    max-width: 100%;
}

#item-list > div {
    flex: 0 1 300px;
    margin: 10px;
    box-sizing: border-box;
    text-align: center;
}

#item-list img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    transition: transform 0.3s ease-in-out;
}

#item-list img:hover {
    transform: scale(1.16);
}

</style>

<body>

    <nav id="navbar" style="margin-bottom: 0px;">
    </nav>

    <div class="container">
        <main>
            <section>
        <h2>ITEM REFURBISHMENTS</h2>
                <!-- Search Bar -->
                <center><input type="text" id="search-bar" placeholder="Search items..."></center>

                <!-- Category Filters 
                <div id="filters">
                    <label><input type="checkbox" name="category" value="Furniture"> Furniture</label>
                    <label><input type="checkbox" name="category" value="Clothing"> Clothing</label>-->
                    <!-- Add more categories as needed 
                </div>-->

                <!-- Item List -->
                <div id="item-list"></div> <!-- Changed to a div instead of ul -->
            </section>
        </main>
    </div>
    
    <div id="dhtmltooltip"></div>
    
    <script src="/heaven/dhtmltooltip.js"></script>

    <script>
        let items = [];
        
        fetch('../interests/items.json')
            .then(response => response.json())
            .then(data => {
                items = data;
                displayItems(items);
            });
        
        function displayItems(items) {
            const itemList = document.getElementById('item-list');
            itemList.innerHTML = ''; 
        
            const observer = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const img = entry.target;
                        img.src = img.getAttribute('data-src');
                        img.removeAttribute('data-src');
                        observer.unobserve(img);
                    }
                });
            }, {
                root: null,
                rootMargin: '0px',
                threshold: 0.1
            });
        
            items.forEach(item => {
                item.customizations.forEach(customization => {
                    const itemContainer = document.createElement('div');
                    itemContainer.style.textAlign = 'center';
        
                    const img = document.createElement('img');
                    img.setAttribute('data-src', customization.image); 
                    img.alt = `${item.name} - ${customization.variant}`;
                    img.style.width = '100%';
                    img.style.height = '200px';
                    img.style.objectFit = 'cover';
                    img.style.transition = 'transform 0.3s ease-in-out';
        
                    observer.observe(img); 
        
                    const caption = document.createElement('div');
                    caption.textContent = `${item.name} - ${customization.variant}`;
                    caption.style.marginTop = '5px';
                    caption.style.fontSize = '14px';
        
                    itemContainer.appendChild(img);
                    itemContainer.appendChild(caption);
                    itemList.appendChild(itemContainer);
                });
            });
        }
        
        document.getElementById('search-bar').addEventListener('input', filterItems);
        document.querySelectorAll('input[name="category"]').forEach(checkbox => {
            checkbox.addEventListener('change', filterItems);
        });
        
        function filterItems() {
            const searchTerm = document.getElementById('search-bar').value.toLowerCase();
            const selectedCategories = Array.from(document.querySelectorAll('input[name="category"]:checked'))
                .map(checkbox => checkbox.value);
        
            const filteredItems = items.map(item => {
                const matchesItemName = item.name.toLowerCase().includes(searchTerm);
                const matchingCustomizations = item.customizations.filter(customization => 
                    customization.variant.toLowerCase().includes(searchTerm)
                );
        
                if ((matchesItemName || matchingCustomizations.length > 0) && 
                    (selectedCategories.length === 0 || selectedCategories.includes(item.category))) {
                    return {
                        ...item, 
                        customizations: matchesItemName ? item.customizations : matchingCustomizations
                    };
                }
        
                return null;
            }).filter(item => item !== null);
        
            displayItems(filteredItems);
        }
        </script>
        
    
</body>
</html>
